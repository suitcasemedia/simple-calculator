<?php namespace App; 

class calculator{


	public $input_numbers = array() ;



	/**********************************************************************************************************
	Add method 
	/*********************************************************************************************************/
	
	public function add( $string){
	$value = $this->parseString($string);
	return intval($value[0]) + intval($value[2]) ;

	}


	/**********************************************************************************************************
	Subtract method 
	/*********************************************************************************************************/
	

	public function subtract( $input)
	{
	$value = $this->parseString($input);
	return intval($value[0]) - intval($value[2]) ;
	}


	/**********************************************************************************************************
	Multiply method 
	/*********************************************************************************************************/
	

	public function multiply( $string)
	{
	$value = $this->parseString($string);
	return intval($value[0])  *  intval($value[2]) ;
	}


	/**********************************************************************************************************
	Divide method 
	/*********************************************************************************************************/
	

	public function divide( $string )
	{
	$value = $this->parseString($string);
	return intval($value[0])  / intval($value[2]) ;
	}

	/**********************************************************************************************************
	Parse string
	/*********************************************************************************************************/
	function parseString($string) {
        $parts = preg_split('((\d+|\+|-|\(|\)|\*|/)|\s+)', $string, null, PREG_SPLIT_NO_EMPTY | PREG_SPLIT_DELIM_CAPTURE);
        $parts = array_map('trim', $parts);
       // $this->extractOperator($parts);


        return $parts;

    }
    /**********************************************************************************************************
	Extract operator
	/*********************************************************************************************************/
	

}
